@model PAWS_NDV_PetLovers.ViewModels.TransactionsVm
@{
    ViewData["Title"] = "Create";
}


<div class="container p-0 bg container-bord">

    <div class="container p-0">

        <div class="container p-0  bg-custom-color">
            <div>
                <div class="container p-2">
                    <h1>Select Product</h1>
                </div>
            </div>
        </div>

        <form method="post" asp-action="Create">
            <div class="text-danger" asp-validation-summary="ModelOnly"></div>
            <div class="row mb-4 justify-content-between">
                <div class="form-group col-lg-3 col-xl-3 col-md-3">
                    <label asp-for="Purchase.customerName" class="control-label"></label>
                    <input asp-for="Purchase.customerName" class="form-control" placeholder="(Optional)">
                </div>
                <div class="form-group col-lg-3 col-xl-3 col-md-3 ">
                    <label asp-for="Purchase.date" class="control-label"></label>
                    <input asp-for="Purchase.date" class="form-control dateInput" >
                </div>
                <div class="form-group col-lg-4 col-xl-4 col-md-4">

                </div>
                <div class="form-group col-lg-2 col-xl-2 col-md-2">
                    <!--Modal Button-->
                    <label class="control-label"></label>
                    <button type="button" id="AddProductBtn" class="btn btn-success form-control " data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                        Select Product
                    </button>
                </div>
            </div>
  
        <table class="table" id="purchaseTable">
            <thead>
                <tr>
                    <th class="text-center">Id</th>
                    <th class="text-center">Name</th>
                    <th class="text-center">Category</th>
                    <th class="text-center">Stock</th>
                    <th class="text-center">Price</th>
                    <th>Order Quantity</th>
                </tr>
            </thead>
            <tbody>
                <tr class="detailRow">
                    <!--selected Product will appear here-->
                </tr>
            </tbody>
        </table>


            <div class="fixed-bottom p-4 pe-5 text-end">
                <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                <input type="submit" class="btn btn-primary" value="Purchase" />
            </div>
         </form>
   
    </div>

</div>



<!-- Modal for selecting Products  / Select Product - INDEX-->
<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary">
                @* <h1 class="modal-title fs-5" id="staticBackdropLabel">Select Product</h1>  *@
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <table class="table hover" id="modalProductTbl">
                        <thead>
                            <tr>
                                <th class="text-center">Select</th>
                                <th class="text-center">Id</th>
                                <th class="text-center">Name</th>
                                <th class="text-center">Category</th>
                                <th class="text-center">Stock</th>
                                <th class="text-center">Price</th>
                                <th class="text-center">Order Quantity</th>
                            </tr>
                        </thead>
                        <tbody>

                          
                            @foreach (var product in Model.IProducts)
                            {
                                <tr>
                                    <td class="text-center"><input type="checkbox" class="selectProduct form-check-input" data-id="@product.id" data-name="@product.productName" data-category="@product.category.categoryName" data-qty="@product.quantity" data-price="@product.sellingPrice" /></td>
                                    <td class="text-center">@product.id</td>
                                    <td class="text-center">@product.productName</td>
                                    <td class="text-center">@product.category.categoryName</td>
                                    <td class="text-center">@product.quantity</td>
                                    <td class="text-center">@product.sellingPrice</td>
                                    <td><input type="number" class="form-control orderQtyInput orderItemQty" min="1" max="@product.quantity" value="1" /></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="modal-footer">
                        <div class="text-danger me-2" id="selectionWarning" style="display:none;">Product is already selected.</div>
                        <button type="button" class="btn btn-secondary bg-opacity-10" id="ViewSelectedProduct">Cancel</button>
                        @* <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button> *@
                        <button type="button" class="btn btn-primary" id="SelectProductButton">Add</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            var rowIndex = 0; // Initialize row index counter

            // Reset the quantity input fields when the modal is shown
            $('#staticBackdrop').on('show.bs.modal', function () {
                $('.orderQtyInput').val(1); // Reset quantity to 1 or any default value

                $('#selectionWarning').hide(); // Hide warning when showing the modal
            });

            $('#AddProductBtn').on('click', function () {
                $('#staticBackdropSelectedProduct').modal('hide');
            });

            $('#ViewSelectedProduct').on('click', function () {
                $('#selectionWarning').hide();
                // Dismiss the modal after adding the products
                $('#staticBackdrop').modal('hide');

                $('#staticBackdropSelectedProduct').modal('show');
            });

            // Add selected products to the main table -- Modal
            $('#SelectProductButton').on('click', function () {
                var productAlreadySelected = false;
                var quantityExceedsLimit = false;

                // Check if any products are selected
                if ($('.selectProduct:checked').length === 0) {
                    $('#selectionWarning').text('Please select a product.').show();
                    return; // Exit the function to prevent further processing
                }

                $('.selectProduct:checked').each(function () {
                    var productId = $(this).data('id');
                    var productName = $(this).data('name');
                    var productCategory = $(this).data('category');
                    var qtyOnHand = $(this).data('qty');
                    var price = $(this).data('price');
                    var orderQty = $(this).closest('tr').find('.orderQtyInput').val();

                    // Check if product is already selected
                    if ($("#purchaseTable input[type='hidden'][value='" + productId + "']").length > 0) {
                        productAlreadySelected = true;
                        return;
                    }

                    // Check if selected quantity exceeds available quantity
                    if (parseInt(orderQty) > parseInt(qtyOnHand)) {
                        quantityExceedsLimit = true;
                        return;
                    }

                    // Create a new row with the selected product details and include the unique index
                    var newRow = `
                                <tr class="detailRow">
                                    <td class="text-center"><input type="hidden" name="Purchase.purchaseDetails[${rowIndex}].ProductId" value="${productId}" /> ${productId}</td>
                                    <td class="text-center">${productName}</td>
                                    <td class="text-center">${productCategory}</td>
                                    <td class="text-center">${qtyOnHand}</td>
                                    <td class="text-center">${price}</td>
                                    <td class="text-center"><input type="number" name="Purchase.purchaseDetails[${rowIndex}].quantity" class="form-control orderItemQty" value="${orderQty}" min="1" max="${qtyOnHand}" /></td>
                                    <td class="text-center"><input type="hidden" name="Purchase.purchaseDetails[${rowIndex}].sellingPrice" class="form-control w-50" value="${price}"/></td>

                                    <td><button type="button" class="btn btn-danger removeRow">Remove</button></td>
                                </tr>

                            `;

                    $('#purchaseTable tbody').append(newRow);
                    rowIndex++; // Increment the row index counter
                });

                if (productAlreadySelected) {
                    $('#selectionWarning').text('Product is already selected.').show();
                } else if (quantityExceedsLimit) {
                    $('#selectionWarning').text('Selected quantity exceeds available stock.').show();
                } else {
                    $('#selectionWarning').hide();
                    // Dismiss the modal after adding the products
                    $('#staticBackdrop').modal('hide');
                    $('#staticBackdropSelectedProduct').modal('show');
                }

                // Uncheck all checkboxes after adding
                $('.selectProduct').prop('checked', false);

            });

            // Remove row from the table
            $(document).on('click', '.removeRow', function () {
                $(this).closest('tr').remove();
            });

            // Validate quantity input on change
            $(document).on('input', '.orderItemQty', function () {
                var max = $(this).attr('max');
                var value = $(this).val();
                if (parseInt(value) < 1) {
                    $(this).val(1); // Set value to 1 if less than 1
                } else if (parseInt(value) > parseInt(max)) {
                    $(this).val(max); // Limit value to max if exceeds
                }
            });
        });
    </script>
}