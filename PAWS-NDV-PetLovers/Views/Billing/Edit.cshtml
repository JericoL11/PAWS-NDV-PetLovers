        @model PAWS_NDV_PetLovers.ViewModels.TransactionsVm

@{
    ViewData["Title"] = "Billing Diagnostic - Edit";
}


<div class="container  p-0 bg container-bord">

    <form method="post" asp-action="Edit"> <div asp-validation-summary="ModelOnly" class="text-danger"></div>
      
        <div class="container  p-0">

            <div class="container p-0 bg-custom-color sticky-header">
                <div>
                    <div class="container p-2">
                        <h1>Pet Information</h1>
                    </div>
                </div>
            </div>

        </div>


        <div class="row row-appointments">

                <div class="form-group col-lg-2 col-md-6 col-auto">
                    <label class="control-label ">Owner ID - Name</label>
                    <input value="@($"{Model.Diagnostics.pet.owner.id} - {Model.Diagnostics.pet.owner.fname} {Model.Diagnostics.pet.owner.lname}")" class="form-control" readonly />
                </div>

                <div class="form-group col-lg-2 col-md-2  col-auto">
                    <label asp-for="Diagnostics.diagnostic_Id" class="control-label"></label>
                    <input class="form-control w-50 " asp-for="Diagnostics.diagnostic_Id" readonly />
                </div>
        </div>
      

        <div class="row row-appointments">
            <div class="form-group col-lg-3 col-md-6 col-auto">
                <label asp-for="Diagnostics.petId" class="control-label"></label>
                <input asp-for="Diagnostics.petId" class="form-control" readonly />
            </div>
            <div class="form-group col-lg-3 col-md-6 col-auto">
                <label asp-for="Diagnostics.pet.petName" class="control-label"></label>
                <input asp-for="Diagnostics.pet.petName" class="form-control" readonly />
            </div>

            <div class="form-group col-lg-3 col-md-6 col-auto">
                <label asp-for="Diagnostics.pet.breed" class="control-label"></label>
                <input asp-for="Diagnostics.pet.breed" class="form-control" readonly />
            </div>

            <div class="form-group col-lg-3 col-md-6 col-auto">
                <label asp-for="Diagnostics.pet.gender" class="control-label"></label>
                <input asp-for="Diagnostics.pet.gender" class="form-control" readonly />
            </div>
            <div class="form-group col-3 col-auto">
                <!-- Hidden Field for Date -->
                <label asp-for="Diagnostics.weight" class="control-label"></label>
                <input asp-for="Diagnostics.weight" class="form-control bg-light decimal-input w-50" placeholder="Input weight" value="@Model.Diagnostics.weight" required />
            </div>

           @*  <div class="form-group col-lg-3 col-md-6">
                <label asp-for="Diagnostics.pet.age" class="control-label"></label>
                <input asp-for="Diagnostics.pet.age" class="form-control" readonly />
            </div>

            <div class="form-group col-lg-3 col-md-6">
                <label asp-for="Diagnostics.pet.bdate" class="control-label"></label>
                <input type="hidden" asp-for="Diagnostics.pet.bdate" class="form-control" readonly />
                <input value="@Model.Diagnostics.pet.bdate?.ToString("MMM. dd, yyyy")" class="form-control" readonly />
            </div>
 *@
        
        </div>

        <div class="row mt-3">
            <div class="form-group col-lg-3 visually-hidden">
                <!-- Hidden Field for Date -->
                <label asp-for="Diagnostics.date" class="control-label"></label>
                <input type="hidden" asp-for="Diagnostics.date" class="form-control dateInput" value="@Model.Diagnostics.date" readonly />
                <input value="@Model.Diagnostics.date?.ToString("MMM. dd, yyyy")" class="form-control" readonly />

            </div>
        
        </div>

    </form>

       
                    <div class="btn-group btn-group-toggle pt-4 mx-3" data-toggle="buttons">
                    
                                <a role="presentation" asp-action="SwitchToBillingTab" asp-route-tabName="Diagnosis" asp-route-id="@Model.Diagnostics.diagnostic_Id" class="@(Model.activeBillingTab == PAWS_NDV_PetLovers.ViewModels.BillingTab.Diagnosis ? "active" : string.Empty) btn btn-success">Service</a>
                   
                                <a role="presentation" asp-action="SwitchToBillingTab" asp-route-tabName="Purchase" asp-route-id="@Model.Diagnostics.diagnostic_Id" class="@(Model.activeBillingTab == PAWS_NDV_PetLovers.ViewModels.BillingTab.Purchase ? "active" : string.Empty) btn btn-success">Purchase</a>
                    
                                <a role="presentation" asp-action="SwitchToBillingTab" asp-route-tabName="Billing" asp-route-id="@Model.Diagnostics.diagnostic_Id" class="@(Model.activeBillingTab == PAWS_NDV_PetLovers.ViewModels.BillingTab.Billing ? "active" : string.Empty) btn btn-success">Billing</a>
                   
                    </div>
        

                    @switch (Model.activeBillingTab)
                    {
                        case PAWS_NDV_PetLovers.ViewModels.BillingTab.Diagnosis:
                            @await Component.InvokeAsync("Diagnostics", new {id = Model.Diagnostics.diagnostic_Id})  //Service on View
                        break;

                                        case PAWS_NDV_PetLovers.ViewModels.BillingTab.Purchase:
                                            @await Component.InvokeAsync("Purchase", new { id = Model.Diagnostics.diagnostic_Id, errorMessage = Model.errorMessage, RemoveErrorMessage = Model.RemoveErrorMessage})
                                         break;

                                        case PAWS_NDV_PetLovers.ViewModels.BillingTab.Billing:
                                            @await Component.InvokeAsync("Billing", new { id = Model.Diagnostics.diagnostic_Id, PaymentErrorMessage = Model.PaymentErrorMessage})
                                        break;

                                        default:
                                        @await Component.InvokeAsync("Diagnosis", new { id = Model.Diagnostics.diagnostic_Id })
                                        break;
                    }

   
</div>

<script src="~/js/TransactionsDT/modalProductTable.js"async></script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

}
