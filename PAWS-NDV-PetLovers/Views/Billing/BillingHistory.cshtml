@model PAWS_NDV_PetLovers.ViewModels.TransactionsVm
@{
    ViewData["Title"] = "Billing History -> ALL TRANSACTION HISTORY";
}

<div class="container p-0 bg container-bord">

    <div class="container p-0">

        <div class="container p-0  bg-custom-color">
            <div>
                <div class="container p-2">
                    <h1>Transaction History</h1>
                </div>
            </div>
        </div>

        <div class="container">
            <ul class="nav">
                <li><a role="presentation" asp-action="SwitchToHistoryTab" asp-route-tabName="All" class="@(Model.activeHistoryTab == PAWS_NDV_PetLovers.ViewModels.BillingHistoryTab.All ? "active" : string.Empty) btn btn-outline-primary">All</a></li>
                <li><a role="presentation" asp-action="SwitchToHistoryTab" asp-route-tabName="Diagnostics" class="@(Model.activeHistoryTab == PAWS_NDV_PetLovers.ViewModels.BillingHistoryTab.Diagnostics ? "active" : string.Empty) btn btn-outline-primary">Diagnostics</a></li>
                <li><a role="presentation" asp-action="SwitchToHistoryTab" asp-route-tabName="Purchase" class="@(Model.activeHistoryTab == PAWS_NDV_PetLovers.ViewModels.BillingHistoryTab.Purchase ? "active" : string.Empty) btn btn-outline-primary">Purchase</a></li>
            </ul>
        </div>


        @switch (Model.activeHistoryTab)
        {
            case PAWS_NDV_PetLovers.ViewModels.BillingHistoryTab.All:
                @await Component.InvokeAsync("AllBillingHistory")
                break;

            case PAWS_NDV_PetLovers.ViewModels.BillingHistoryTab.Diagnostics:
                @await Component.InvokeAsync("DiagnosticBillingHistory")
                break;

            case PAWS_NDV_PetLovers.ViewModels.BillingHistoryTab.Purchase:
                @await Component.InvokeAsync("PurchaseBillingHistory")
                break;
        
            default:
                @await Component.InvokeAsync("AllBillingHistory")
                break;
        }
    </div>
</div>