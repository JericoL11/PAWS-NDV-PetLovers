@model PAWS_NDV_PetLovers.ViewModels.AppointmentVm
@{
    ViewData["Title"] = "Appointment Dashboard";
}



<div class="container-fluid pb-3">


        <div class="container p-0 container-appointments bg-custom-color">
            <div class="row">
                <div class="col-12">
                    <div class="container bg p-2">
                        <h1>Appointments</h1>
                    </div>
                </div>
            </div>
        </div>

        <div class="container mt-3">
            <ul class="nav">
                <li>
                    <a role="presentation" asp-action="SwitchToTab" asp-route-tabName="booking" class="@(Model.activeAppointTab == PAWS_NDV_PetLovers.ViewModels.AppointmentTab.booking ? "active" : string.Empty) btn btn-outline-success px-4">Booking</a>
                </li>

                <li>
                    <a role="presentation" asp-action="SwitchToTab" asp-route-tabName="followUp" class="@(Model.activeAppointTab == PAWS_NDV_PetLovers.ViewModels.AppointmentTab.followUp ? "active" : string.Empty) btn btn-outline-success px-4">Follow-up</a>
                </li>

            <li>
                <a role="presentation" asp-action="SwitchToTab" asp-route-tabName="monitoring" class="@(Model.activeAppointTab == PAWS_NDV_PetLovers.ViewModels.AppointmentTab.monitoring ? "active" : string.Empty) btn btn-outline-success px-4">Monitoring</a>
            </li>
            </ul>
        </div>


        @switch (Model.activeAppointTab)
        {
            case PAWS_NDV_PetLovers.ViewModels.AppointmentTab.booking:
                @await Component.InvokeAsync("Booking", new { updated = Model.updated, created = Model.created })
                break;

            case PAWS_NDV_PetLovers.ViewModels.AppointmentTab.followUp:
                @await Component.InvokeAsync("FollowUp", new {updated = Model.updated})
                break;

            case PAWS_NDV_PetLovers.ViewModels.AppointmentTab.monitoring:
                @await Component.InvokeAsync("Monitoring")
            break;

            default:
                @await Component.InvokeAsync("Booking", new { updated = Model.updated, created = Model.created })
                break;
        }

    

   
</div>

