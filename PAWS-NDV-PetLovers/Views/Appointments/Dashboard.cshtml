@model PAWS_NDV_PetLovers.ViewModels.AppointmentVm
@{
    ViewData["Title"] = "Appointment Dashboard";
}


<div class="container-fluid bg p-0 container-bord">
    <div class="container p-0">


            <div class="container p-0 bg-custom-color">
                <div>
                    <div class="container p-2">
                        <h1>Appointments</h1>
                    </div>
                </div>
            </div>

            <div class="container mt-3">
                <ul class="nav p-1">
                    <li>
                        <a role="presentation" asp-action="SwitchToTab" asp-route-tabName="booking" class="@(Model.activeAppointTab == PAWS_NDV_PetLovers.ViewModels.AppointmentTab.booking ? "active" : string.Empty) btn btn-success btn-booking  px-4">Booking</a>
                    </li>

                    <li>
                        <a role="presentation" asp-action="SwitchToTab" asp-route-tabName="followUp" class="@(Model.activeAppointTab == PAWS_NDV_PetLovers.ViewModels.AppointmentTab.followUp ? "active" : string.Empty) btn btn-success btn-followup mx-2 px-4">Follow-up</a>
                    </li>

                    <li>
                        <!-- Set current date as default -->
                        <a asp-action="Create" asp-route-date="@DateTime.Now.ToString("yyyy-MM-dd")" class="btn btn-primary px-4 bg-custom-btn">
                            Add New Booking
                        </a>
                        <!-- <a asp-action="AppointmentHistory" class="btn btn-success px-4">History</a> -->
                    </li>


                </ul>

                
            </div>


            @switch (Model.activeAppointTab)
            {
                case PAWS_NDV_PetLovers.ViewModels.AppointmentTab.booking:
                    @await Component.InvokeAsync("Booking", new { updated = Model.updated, created = Model.created })
                    break;

                case PAWS_NDV_PetLovers.ViewModels.AppointmentTab.followUp:
                    @await Component.InvokeAsync("FollowUp", new {updated = Model.updated})
                    break;

                default:
                    @await Component.InvokeAsync("Booking", new { updated = Model.updated, created = Model.created })
                    break;
            }

    

   
    </div>
</div>
