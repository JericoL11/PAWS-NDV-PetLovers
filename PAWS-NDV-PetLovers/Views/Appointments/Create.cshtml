@model PAWS_NDV_PetLovers.ViewModels.AppointmentVm
@{
    ViewData["Title"] = "Create";
}

<div class="bg-secondary bg-opacity-10 py-2 mb-3">
    <div class="container">
        <h1>Set Appointments</h1>
    </div>
</div>

<div class="container">
    <div class="mb-4">
        <a class="btn btn-primary" asp-action="Create" asp-controller="Owners">Register</a>
        <!-- Button trigger modal -->
        <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
            Existing Record
        </button>
    </div>

    <form asp-action="Create" method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="row">
            <!-- Owner fields -->
            <div class="form-group col-lg-4">
                <label asp-for="Appointment.fname" class="control-label"></label>
                <input id="fname" asp-for="Appointment.fname" class="form-control" />
                <span asp-validation-for="Appointment.fname" class="text-danger"></span>
            </div>

            <div class="form-group col-lg-4">
                <label asp-for="Appointment.lname" class="control-label"></label>
                <input id="lname" asp-for="Appointment.lname" class="form-control" />
                <span asp-validation-for="Appointment.lname" class="text-danger"></span>
            </div>

            <div class="form-group col-lg-4">
                <label asp-for="Appointment.mname" class="control-label"></label>
                <input id="mname" asp-for="Appointment.mname" class="form-control" />
                <span asp-validation-for="Appointment.mname" class="text-danger"></span>
            </div>

            <div class="form-group col-lg-4">
                <label asp-for="Appointment.contact" class="control-label"></label>
                <input id="contact" asp-for="Appointment.contact" class="form-control" />
                <span asp-validation-for="Appointment.contact" class="text-danger"></span>
            </div>

            <div class="form-group col-lg-4">
                <label asp-for="Appointment.date" class="control-label"></label>
                <input asp-for="Appointment.date" class="form-control minDate" id="appointmentDate" type="date" />
                <span asp-validation-for="Appointment.date" class="text-danger"></span>
            </div>

            <div class="form-group col-lg-4">
                <label asp-for="Appointment.time" class="control-label"></label>
                <select id="timeDropdown" name="Appointment.time" class="form-control" required>
                    <!-- Times will be loaded here -->
                </select>
                <span asp-validation-for="Appointment.time" class="text-danger"></span>
            </div>

            <!-- Services Table -->
            <div class="col-8">
                <table class="table mt-2" id="DetailsTable">
                    <thead>
                        <tr>
                            <th>Service</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr class="detailRow">
                            <td>
                                <div class="form-group">
                                    <select name="Appointment.IAppDetails[0].serviceId" asp-items="@ViewBag.Services" class="form-control" required></select>
                                </div>
                            </td>
                            <td>
                                <button type="button" class="btn btn-danger removeRow">Remove</button>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <button type="button" class="btn btn-success" id="addRow">Add Row</button>
            </div>

            <!-- Submit and Cancel buttons -->
            <div class="form-group mt-3 text-end">
                <a asp-action="Index" class="btn btn-secondary px-4">Cancel</a>
                <input type="submit" value="Create" class="btn btn-primary px-4" />
            </div>
        </div>
    </form>
</div>

<!-- Modal for selecting existing records -->
<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">Select Record</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="OwnerSelectionForm">
                    <table class="table table-striped w-100" id="OwnerTable">
                        <thead>
                            <tr>
                                <th class="text-center">Selector</th>
                                <th class="text-center">OwnerId</th>
                                <th class="text-center">Fullname</th>
                                <th class="text-center">Address</th>
                                <th class="text-center">Contact</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var owner in Model.IOwner)
                            {
                                <tr>
                                    <td class="text-center">
                                        <input type="radio" name="SelectedOwnerId"
                                               value="@owner.id"
                                               data-fname="@owner.fname"
                                               data-lname="@owner.lname"
                                               data-mname="@owner.mname"
                                               data-contact="@owner.contact" />
                                    </td>
                                    <td class="text-center">@Html.DisplayFor(modelItem => owner.id)</td>
                                    <td class="text-center">@Html.DisplayFor(modelItem => owner.fname) @Html.Raw(" ") @Html.DisplayFor(modelItem => owner.lname)</td>
                                    <td class="text-center">@Html.DisplayFor(modelItem => owner.address)</td>
                                    <td class="text-center">@Html.DisplayFor(modelItem => owner.contact)</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" id="SelectOwnerButton">Select</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            // Function to update row names
            function updateRowNames() {
                $('#DetailsTable tbody tr').each(function (index) {
                    $(this).find('input, select').each(function () {
                        var name = $(this).attr('name');
                        if (name) {
                            var newName = name.replace(/\d+/, index);
                            $(this).attr('name', newName);
                        }
                    });
                });
            }

            // Add row
            $('#addRow').click(function () {
                var rowCount = $('#DetailsTable tbody tr').length;
                var newRow = $('.detailRow').first().clone();

                newRow.find('input, select').each(function () {
                    var name = $(this).attr('name');
                    if (name) {
                        var newName = name.replace(/\d+/, rowCount);
                        $(this).attr('name', newName);
                    }
                    $(this).val(''); // Clear the value of the input/select
                });

                newRow.appendTo($('#DetailsTable tbody'));
                updateRowNames();
            });

            // Remove row
            $(document).on('click', '.removeRow', function () {
                if ($('#DetailsTable tbody tr').length > 1) {
                    $(this).closest('tr').remove();
                    updateRowNames(); // Update the name attributes of the remaining rows
                }
            });

            // Modal select button
            $('#SelectOwnerButton').click(function () {
                var selectedOwner = $('input[name="SelectedOwnerId"]:checked');
                if (selectedOwner.length > 0) {
                    var fname = selectedOwner.data('fname');
                    var lname = selectedOwner.data('lname');
                    var mname = selectedOwner.data('mname');
                    var contact = selectedOwner.data('contact');

                    $('#fname').val(fname);
                    $('#lname').val(lname);
                    $('#mname').val(mname);
                    $('#contact').val(contact);
                    $('#staticBackdrop').modal('hide');
                } else {
                    alert("Please select an owner.");
                }
            });

            function fetchAvailableTimes() {
                var selectedDate = $('#appointmentDate').val();

                if (selectedDate) {
                    $.ajax({
                        url: '@Url.Action("GetAvailableTimes", "Appointments")',
                        type: 'GET',
                        data: { date: selectedDate },
                        success: function (data) {
                            var timeDropdown = $('#timeDropdown');
                            timeDropdown.empty(); // Clear existing options

                            var hasAvailableTimes = false;

                            // Add AM options
                            if (data.availableAM && data.availableAM.length > 0) {
                                var amGroup = $('<optgroup>', { label: 'Morning' });
                                $.each(data.availableAM, function (index, value) {
                                    amGroup.append($('<option>', {
                                        value: value,
                                        text: value + ' am'
                                    }));
                                });
                                timeDropdown.append(amGroup);
                                hasAvailableTimes = true;
                            }

                            // Add PM options
                            if (data.availablePM && data.availablePM.length > 0) {
                                var pmGroup = $('<optgroup>', { label: 'Afternoon' });
                                $.each(data.availablePM, function (index, value) {
                                    pmGroup.append($('<option>', {
                                        value: value,
                                        text: value
                                    }));
                                });
                                timeDropdown.append(pmGroup);
                                hasAvailableTimes = true;
                            }

                            // If no available times, add "Fully booked" option
                            if (!hasAvailableTimes) {
                                timeDropdown.append($('<option>', {
                                    value: '',
                                    text: 'Fully booked',
                                    disabled: true,
                                    selected: true
                                }));
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching available times:', error);
                        }
                    });
                }
            }


            // Trigger the date change event on page load if date is pre-filled
            if ($('#appointmentDate').val()) {
                fetchAvailableTimes();
            }

            $('#appointmentDate').change(fetchAvailableTimes);
        });
    </script>

}
