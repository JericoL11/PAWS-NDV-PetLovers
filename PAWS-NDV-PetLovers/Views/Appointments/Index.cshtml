@model PAWS_NDV_PetLovers.ViewModels.AppointmentVm
@{
    ViewData["Title"] = "Index";
}

<div class="bg-secondary bg-opacity-10 py-2 mb-3">
    <div class="container">
        <h1>Appointments</h1>
    </div>
</div>

<div class="container">
    <div class="my-3">
      
        @* set current date as default *@
        <a asp-action="Create" asp-route-date="@DateTime.Now.ToString("yyyy-MM-dd")" class="btn btn-primary">
            Set Appointment
        </a>
        @* <a asp-action="AppointmentHistory" class="btn btn-success px-4">History</a> *@
    </div>
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <table class="table table-striped" id="AppointmentTable">
        <thead>
            <tr class="text-center">
                <th>Appointment ID</th>
                <th>Name</th>
                <th>Service</th>
                <th>Contact #</th>
                <th>Date</th>
                <th>Time</th>
                <th>Remarks</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.IAppointments)
            {
                <tr class="text-center">
                    <td>@Html.DisplayFor(modelItem => item.AppointId)</td>
      
                    <td>@Html.DisplayFor(modelItem => item.fname) @Html.Raw(" ") @Html.DisplayFor(modelItem => item.lname)</td>
                    <td>
                        @{
                            // Get distinct service names
                            var services = item.IAppDetails
                            .Select(d => d.Services.serviceName)
                            .Distinct()
                            .ToList();

                            // Take the first 2 services for display
                            var serviceDisplay = services.Take(2);

                            // Get the remaining services (if more than 2)
                            var remainingServices = services.Skip(2);
                        }

                        <span>
                            @string.Join(", ", serviceDisplay) <!-- Display first 2 services -->
                            @if (services.Count > 2)
                            {
                                <strong>
                                    <!-- Display ellipsis and remaining services as a tooltip -->
                                    <span title="@string.Join(", ", remainingServices)">
                                        ...
                                    </span>
                                </strong>
                            }
                        </span>
                    </td>

                    <td>@Html.DisplayFor(modelItem => item.contact)</td>
                    <td> @item.date.ToString("MMM. dd, yyyy")</td>
                    <td>@Html.DisplayFor(modelItem => item.time)</td>
               
                    <td class="remarks-cell">
           
                    </td>

                    <td>
                        <form asp-action="DiagnosAppointment" asp-controller="C_Diagnostics" method="get">
                           @{
                                // Check if owner exists and matches appointment details
                                var ownerExists = Model.IOwner
                                .FirstOrDefault(o => o.fname == item.fname
                                && o.lname == item.lname
                                && o.mname == item.mname);
                            }

                            @if (ownerExists == null )
                            {
                                //storing the necessary fields
                                //asp-route-fname and etc, will be pass to craete params
                                <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.AppointId"> Update</a>

                                <a class="btn btn-info" asp-action="Create" asp-controller="Owners"
                                    asp-route-fname="@item.fname" 
                                    asp-route-lname="@item.lname"
                                    asp-route-mname="@item.mname"
                                    asp-route-contact="@item.contact"> Register</a>
                            }


                            @if (item.remarks == null)
                            {
                               @*  <input type="hidden" name="fname" value="@item.fname" />
                                <input type="hidden" name="lname" value="@item.lname" /> *@

                                if(ownerExists != null)
                                {
                                    <input type="hidden" name="appointmentId" value="@item.AppointId"  />
                                    <input type="hidden" name="fname" value="@item.fname" />
                                    <input type ="hidden" name="lname" value="@item.lname" />
                                    <input type="hidden" name="contact" value="@item.contact" />


                                    //storage for id
                                    @*  List<int> ServiceIds = new List<int>(); *@

                                    //get the selected Services
                                    var selectedServices = item.IAppDetails
                                    .Select(d => d.Services.serviceId);

                                 

                                    foreach (var service in selectedServices)
                                    {
                                        <input type="hidden" name="serviceId" value="@service" />
                                    }

                                    @*<input type="hidden" name="Appointmentid" value="@item.AppointId" />
                                    <button class="btn btn-success">Complete</button> *@


                                @* <a asp-action="Edit" asp-controller="Owners" asp-route-appointId="@item.AppointId"
                                    Complete</a> *@

                                    <a asp-action="Edit" asp-controller="Owners" asp-route-id="@item.ownerId" class="btn btn-success">
                                    Complete
                                </a> 


                                }
                            }

                            else
                            {

                                @* Get the selected Services *@

                                IList<int> selectedIds = new List<int>();


                                //get the selected Services
                                var selectedServices = item.IAppDetails
                                .Select(d => d.Services.serviceId);

                                // Generate hidden inputs for each selected service ID
                                foreach (var service in selectedServices)
                                {
                                    selectedIds.Add(@service);
                                }

                                var selectedId = string.Join(",", selectedIds);

                                var date = item.date.ToString("MM-dd-yyyy");
                                <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.AppointId" asp-route-date="@date" asp-route-serviceId="@selectedId">Update</a>

                            }
                               @* <a asp-action="Delete" class="btn btn-danger" asp-route-id="@item.Appointment.AppointId">Delete</a> *@
                           </form>
                      
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            $('.remarks-cell').each(function () {
                var remarks = $(this).text().trim();
                if (!remarks) {
                    $(this).text('Incomplete');
                }
            });
        });

    </script>
}

