        @model PAWS_NDV_PetLovers.ViewModels.TransactionsVm
@{
    ViewData["Title"] = "Edit";
}

<div class="bg-secondary bg-opacity-10 py-2 mb-3">
    <div class="container">
        <h1>Update Diagnostics</h1>
    </div>
</div>

<div class="container">
    <form method="post" asp-action="Edit">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="container">
            <h3>Pet Information</h3>
        </div>
        <div class="row">
    
            <div class="form-group col-lg-3 col-md-6">
                <label asp-for="Diagnostics.diagnostic_Id" class="control-label"></label>
                <input class="form-control" asp-for="Diagnostics.diagnostic_Id" readonly />
            </div>
            <div class="form-group col-lg-3 col-md-6">
                <label asp-for="Diagnostics.petId" class="control-label"></label>
                <input asp-for="Diagnostics.petId" class="form-control" readonly />
            </div>

            <div class="form-group col-lg-3 col-md-6">
                <label asp-for="Diagnostics.pet.petName" class="control-label"></label>
                <input asp-for="Diagnostics.pet.petName" class="form-control" readonly />
            </div>

            <div class="form-group col-lg-3 col-md-6">
                <label asp-for="Diagnostics.pet.breed" class="control-label"></label>
                <input asp-for="Diagnostics.pet.breed" class="form-control" readonly />
            </div>

            <div class="form-group col-lg-3 col-md-6">
                <label asp-for="Diagnostics.pet.gender" class="control-label"></label>
                <input asp-for="Diagnostics.pet.gender" class="form-control" readonly />
            </div>

            <div class="form-group col-lg-3 col-md-6">
                <label asp-for="Diagnostics.pet.age" class="control-label"></label>
                <input asp-for="Diagnostics.pet.age" class="form-control" readonly />
            </div>

            <div class="form-group col-lg-3 col-md-6">
                <label asp-for="Diagnostics.pet.bdate" class="control-label"></label>
                <input asp-for="Diagnostics.pet.bdate" class="form-control" readonly />
            </div>

            <div class="form-group col-lg-3 col-md-6">
                <label class="control-label">Owner ID - Name</label>
                <input value="@($"{Model.Diagnostics.pet.owner.id} - {Model.Diagnostics.pet.owner.fname} {Model.Diagnostics.pet.owner.lname}")" class="form-control" readonly />
            </div>
        </div>

        <div class="row mt-3">
            <div class="form-group col-lg-3">
                <!-- Hidden Field for Date -->
                <label asp-for="Diagnostics.date" class="control-label"></label>
                <input asp-for="Diagnostics.date" class="form-control dateInput" value="@Model.Diagnostics.date" readonly />
            </div>
            <div class="form-group col-lg-3">
                <!-- Hidden Field for Date -->
                <label asp-for="Diagnostics.weight" class="control-label"></label>
                <input asp-for="Diagnostics.weight" class="form-control bg-light decimal-input" placeholder="Input weight" value="@Model.Diagnostics.weight" required />
            </div>
        </div>

        <table class="table mt-5">
            <thead>
                <tr>
                    <th>Service Name</th>
                    <th>Details</th>
                    <th>Service Price</th>
                </tr>
            </thead>
            <tbody>

                @for (int i = 0; i < Model.Diagnostics.IdiagnosticDetails.Count; i++)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(model => Model.Diagnostics.IdiagnosticDetails[i].Services.serviceName)
                        </td>

                        <td>
                            <textarea class="form-control bg-light" rows="10" style="resize: none;" name="Diagnostics.IdiagnosticDetails[@i].details">@Model.Diagnostics.IdiagnosticDetails[i].details</textarea>
                        </td>

                        <td>
                            <!-- Display service price formatted as currency -->
                            @{
                                double price = (double)Model.Diagnostics.IdiagnosticDetails[i].servicePrice;
                                var decimalAdded = price.ToString("N2");
                                var displayPrice = $"P{decimalAdded}";
                            }
                            <span>@displayPrice</span>
                        </td>
                        @* Holds the diagnosticDet_Id *@
                        <input type="hidden" name="Diagnostics.IdiagnosticDetails[@i].diagnosticDet_Id" value="@Model.Diagnostics.IdiagnosticDetails[i].diagnosticDet_Id" />
                    </tr>
                }
            </tbody>
        </table>

        <div class="fixed-bottom">
            <div class="form-group fw-bold">
                <span class="bg-secondary bg-opacity-10 px-2">
                    Total Payment:
                    @{
                        double payment = (double)Model.Diagnostics.totalServicePayment;
                        var currency = payment.ToString("N2");
                        var totalPayment = $"P{currency}";
                    }
                    @totalPayment
                </span>
            </div>
        </div>

        <!-- Button trigger modal -->
        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#staticBackdropSelectedProduct">
            Products
        </button>

        <div class="text-end">
            <a asp-action="DiagnosticBill" class="btn btn-secondary px-3">Cancel</a>
            <input type="submit" value="Save" class="btn btn-primary px-4" />
        </div>



        <!-- Modal for View Selected Product / Create -->
        <div class="modal fade" id="staticBackdropSelectedProduct" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header bg-primary">
                        <h1 class="modal-title fs-5 text-white" id="staticBackdropLabel">Selected Product List</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    
                    <div class="modal-body">
                        @* Display Selected Product*@
                        <div class="row justify-content-center">
                            <table class="table border w-75" id="purchaseTable">
                                <thead>
                                    <tr>
                                        <th class="text-center">Id</th>
                                        <th class="text-center">Name</th>
                                        <th class="text-center">Category</th>
                                        <th class="text-center">Stock</th>
                                        <th class="text-center">Price</th>
                                        <th>Order Quantity</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.Diagnostics.PurchaseNav != null && Model.Diagnostics.PurchaseNav.purchaseDetails != null)
                                    {
                                        for (var x = 0; x < Model.Diagnostics.PurchaseNav.purchaseDetails.Count; x++)
                                        {
                                            var purchaseDetail = Model.Diagnostics.PurchaseNav.purchaseDetails.ElementAt(x);

                                            <tr>
                                                <td class="text-center">
                                                    <input type="hidden" name="Diagnostics.PurchaseNav.purchaseDetails[@x].ProductId" value="@purchaseDetail.product.id" />
                                                    @purchaseDetail.product.id
                                                </td>
                                                <td class="text-center">@purchaseDetail.product.productName</td>
                                                <td class="text-center">@purchaseDetail.product.category.categoryName</td>
                                                <td class="text-center">@purchaseDetail.product.quantity</td>
                                                <td class="text-center">@purchaseDetail.product.sellingPrice</td>
                                                <td class="text-center">
                                                    <input type="number" name="Diagnostics.PurchaseNav.purchaseDetails[@x].quantity" class="form-control w-50 orderItemQty" value="@purchaseDetail.quantity" min="1" max="@purchaseDetail.product.quantity" />
                                                </td>
                                                <td><button type="button" class="btn btn-danger removeRow">Remove</button></td>
                                            </tr>
                                        }
                                    }
                               
                                  
                                </tbody>

                            </table>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <input type="date" name="Diagnostics.PurchaseNav.Date" class="dateInput visually-hidden" />
                        <input name="Diagnostics.PurchaseNav.diagnosisId" class="visually-hidden" value="@Model.Diagnostics.diagnostic_Id" />


                        <button type="button" id="AddProductBtn" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                            Select Product
                        </button>

                        <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Save</button>

                        @* <button type="button" class="btn btn-primary">Save</button> *@
                    </div>
                </div>
            </div>
        </div>

    </form>
</div>

<!-- Modal for selecting Products  / Select -->
<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary">
                @* <h1 class="modal-title fs-5" id="staticBackdropLabel">Select Product</h1>  *@
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <table class="table hover" id="modalProductTbl">
                        <thead>
                            <tr>
                                <th class="text-center">Select</th>
                                <th class="text-center">Id</th>
                                <th class="text-center">Name</th>
                                <th class="text-center">Category</th>
                                <th class="text-center">Stock</th>
                                <th class="text-center">Price</th>
                                <th class="text-center">Order Quantity</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var product in Model.IProducts)
                            {
                                <tr>
                                    <td class="text-center"><input type="checkbox" class="selectProduct form-check-input" data-id="@product.id" data-name="@product.productName" data-category="@product.category.categoryName" data-qty="@product.quantity" data-price="@product.sellingPrice" /></td>
                                    <td class="text-center">@product.id</td>
                                    <td class="text-center">@product.productName</td>
                                    <td class="text-center">@product.category.categoryName</td>
                                    <td class="text-center">@product.quantity</td>
                                    <td class="text-center">@product.sellingPrice</td>
                                    <td><input type="number" class="form-control orderQtyInput orderItemQty" min="1" max="@product.quantity" value="1" /></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="modal-footer">
                            <div class="text-danger me-2" id="selectionWarning" style="display:none;">Product is already selected.</div>
                            <button type="button" class="btn btn-secondary bg-opacity-10" id="ViewSelectedProduct">Cancel</button>
                            @* <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button> *@
                            <button type="button" class="btn btn-primary" id="SelectProductButton">Add</button>
                       </div>
                </form>
            </div>
        </div>
    </div>
</div>



<script src="~/js/TransactionsDT/modalProductTable.js" defer></script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>

        $(document).ready(function () {
            var rowIndex = 0; // Initialize row index counter

            // Reset the quantity input fields when the modal is shown
            $('#staticBackdrop').on('show.bs.modal', function () {
                $('.orderQtyInput').val(1); // Reset quantity to 1 or any default value

                $('#selectionWarning').hide(); // Hide warning when showing the modal
            });

            $('#AddProductBtn').on('click', function () {
                $('#staticBackdropSelectedProduct').modal('hide');
            });

            $('#ViewSelectedProduct').on('click', function () {
                $('#selectionWarning').hide();
                // Dismiss the modal after adding the products
                $('#staticBackdrop').modal('hide');

                $('#staticBackdropSelectedProduct').modal('show');
            });

            // Add selected products to the main table -- Modal
            $('#SelectProductButton').on('click', function () {
                var productAlreadySelected = false;
                var quantityExceedsLimit = false;

                // Check if any products are selected
                if ($('.selectProduct:checked').length === 0) {
                    $('#selectionWarning').text('Please select a product.').show();
                    return; // Exit the function to prevent further processing
                }

                $('.selectProduct:checked').each(function () {
                    var productId = $(this).data('id');
                    var productName = $(this).data('name');
                    var productCategory = $(this).data('category');
                    var qtyOnHand = $(this).data('qty');
                    var price = $(this).data('price');
                    var orderQty = $(this).closest('tr').find('.orderQtyInput').val();

                    // Check if product is already selected
                    if ($("#purchaseTable input[type='hidden'][value='" + productId + "']").length > 0) {
                        productAlreadySelected = true;
                        return;
                    }

                    // Check if selected quantity exceeds available quantity
                    if (parseInt(orderQty) > parseInt(qtyOnHand)) {
                        quantityExceedsLimit = true;
                        return;
                    }

                    // Create a new row with the selected product details and include the unique index
                    var newRow = `
                        <tr class="detailRow">
                            <td class="text-center"><input type="hidden" name="Diagnostics.PurchaseNav.purchaseDetails[${rowIndex}].ProductId" value="${productId}" /> ${productId}</td>
                            <td class="text-center">${productName}</td>
                            <td class="text-center">${productCategory}</td>
                            <td class="text-center">${qtyOnHand}</td>
                            <td class="text-center">${price}</td>
                            <td class="text-center"><input type="number" name="Diagnostics.PurchaseNav.purchaseDetails[${rowIndex}].quantity" class="form-control orderItemQty" value="${orderQty}" min="1" max="${qtyOnHand}" /></td>
                            <td class="text-center"><input type="hidden" name="Diagnostics.PurchaseNav.purchaseDetails[${rowIndex}].sellingPrice" class="form-control w-50" value="${price}"/></td>
                   
                            <td><button type="button" class="btn btn-danger removeRow">Remove</button></td>
                        </tr>
            
                    `;
                        
                    $('#purchaseTable tbody').append(newRow);
                    rowIndex++; // Increment the row index counter
                });

                if (productAlreadySelected) {
                    $('#selectionWarning').text('Product is already selected.').show();
                } else if (quantityExceedsLimit) {
                    $('#selectionWarning').text('Selected quantity exceeds available stock.').show();
                } else {
                    $('#selectionWarning').hide();
                    // Dismiss the modal after adding the products
                    $('#staticBackdrop').modal('hide');
                    $('#staticBackdropSelectedProduct').modal('show');
                }

                // Uncheck all checkboxes after adding
                $('.selectProduct').prop('checked', false);

            });

            // Remove row from the table
            $(document).on('click', '.removeRow', function () {
                $(this).closest('tr').remove();
            });

            // Validate quantity input on change
            $(document).on('input', '.orderItemQty', function () {
                var max = $(this).attr('max');
                var value = $(this).val();
                if (parseInt(value) < 1) {
                    $(this).val(1); // Set value to 1 if less than 1
                } else if (parseInt(value) > parseInt(max)) {
                    $(this).val(max); // Limit value to max if exceeds
                }
            });
        });

    </script>



}
